<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neu.hcc.mapper.NursingContentMapper">
  <resultMap id="BaseResultMap" type="com.neu.hcc.model.NursingContent">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_by" jdbcType="VARCHAR" property="createBy" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="serial_number" jdbcType="INTEGER" property="serialNumber" />
    <result column="nursing_name" jdbcType="VARCHAR" property="nursingName" />
    <result column="service_price" jdbcType="REAL" property="servicePrice" />
    <result column="content_describe" jdbcType="VARCHAR" property="contentDescribe" />
    <result column="increment_flag" jdbcType="VARCHAR" property="incrementFlag" />
    <result column="content_status" jdbcType="VARCHAR" property="contentStatus" />
    <result column="level_id" jdbcType="INTEGER" property="levelId" />
  </resultMap>

  <resultMap id="connResultMap" type="com.neu.hcc.model.NursingContent" extends="BaseResultMap">
    <!-- 一对一关联 -->
    <!--
      property: 一对一关联封装的父表的对象名
      column: 两张表的关联字段名
      javaType: 一对一关联封装的父表的类名
    -->
    <association property="nursingLevel" column="level_id" javaType="com.neu.hcc.model.NursingLevel">
      <id column="lid" property="id"></id>
      <result column="lcreate_by" property="createBy"></result>
      <result column="lcreate_date" property="createDate"></result>
      <result column="lupdate_by" property="updateBy"></result>
      <result column="lupdate_date" property="updateDate"></result>
      <result column="lremarks" property="remarks"></result>
      <result column="ldel_flag" property="delFlag"></result>
      <result column="level_name" property="levelName"></result>
      <result column="level_status" property="levelStatus"></result>
    </association>
  </resultMap>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from nursingContent
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.neu.hcc.model.NursingContent">
    insert into nursingContent (id, create_by, create_date, 
      update_by, update_date, remarks, 
      del_flag, serial_number, nursing_name, 
      service_price, content_describe, increment_flag, 
      content_status, level_id)
    values (#{id,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{remarks,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=INTEGER}, #{serialNumber,jdbcType=INTEGER}, #{nursingName,jdbcType=VARCHAR}, 
      #{servicePrice,jdbcType=REAL}, #{contentDescribe,jdbcType=VARCHAR}, #{incrementFlag,jdbcType=VARCHAR}, 
      #{contentStatus,jdbcType=VARCHAR}, #{levelId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.neu.hcc.model.NursingContent">
    update nursingContent
    set create_by = #{createBy,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      remarks = #{remarks,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=INTEGER},
      serial_number = #{serialNumber,jdbcType=INTEGER},
      nursing_name = #{nursingName,jdbcType=VARCHAR},
      service_price = #{servicePrice,jdbcType=REAL},
      content_describe = #{contentDescribe,jdbcType=VARCHAR},
      increment_flag = #{incrementFlag,jdbcType=VARCHAR},
      content_status = #{contentStatus,jdbcType=VARCHAR},
      level_id = #{levelId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, create_by, create_date, update_by, update_date, remarks, del_flag, serial_number, 
    nursing_name, service_price, content_describe, increment_flag, content_status, level_id
    from nursingContent
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, create_by, create_date, update_by, update_date, remarks, del_flag, serial_number, 
    nursing_name, service_price, content_describe, increment_flag, content_status, level_id
    from nursingContent
  </select>

  <select id="selectAllByCondition" parameterType="com.neu.hcc.model.NursingContent" resultMap="connResultMap">
    select nc.id, nc.create_by, nc.create_date, nc.update_by, nc.update_date, nc.remarks, nc.del_flag, nc.serial_number,
    nc.nursing_name, nc.service_price, nc.content_describe, nc.increment_flag, nc.content_status, nc.level_id,
    nl.id lid, nl.create_by lcreate_by, nl.create_date lcreate_date, nl.update_by lupdate_by, nl.update_date lupdate_date, nl.remarks lremarks, nl.del_flag ldel_flag, nl.level_name,
    nl.level_status
    from nursingContent nc
    left join nursingLevel nl on nc.level_id = nl.id
    <where>
      <if test="nursingName != null and nursingName !=''">
        nursing_name like concat('%',#{nursingName},'%')
      </if>
      <if test="levelId != null and levelId != ''">
        and nl.id=#{levelId}
      </if>
    </where>
    order by nc.id
  </select>
</mapper>